import React from "react";
import PropTypes from 'prop-types';


const VersesButton = ({ onClick, className, children}) => (
	<button onClick={onClick} className={className} type="button">
		{children}
	</button>
);

VersesButton.defaultProps = {
	className: '',
}

VersesButton.propTypes = {
    onClick: PropTypes.func,
    className: PropTypes.string,
    children: PropTypes.node.isRequired,
}

export default VersesButton;




	changeButtonStatus(min, max) {
		const { resultCache, searchKey, bibleVersion } = this.state;
		const btns = document.getElementsByClassName("button-versesinfo");

		if (min === 0){
			this.setButtonDisabled(0, btns);
		}else {
			this.setButtonActive(0, btns);
		}

		if (max === resultCache[searchKey][bibleVersion].resultCount){
			this.setButtonDisabled(1, btns);
		}else {
			this.setButtonActive(1, btns);
		}
	}

	setButtonDisabled(i, btns) {
		btns[i].style.pointerEvents = "none";
		btns[i].style.opacity = "0.6";
		btns[i+2].style.pointerEvents = "none";
		btns[i+2].style.opacity = "0.6";
	}

	setButtonActive(i, btns) {
		btns[i].style.pointerEvents = "auto";
		btns[i].style.opacity = "1";
		btns[i+2].style.pointerEvents = "auto";
		btns[i+2].style.opacity = "1";
	}

this.changeButtonStatus(newMinNumber, newMaxNumber);

this.changeButtonStatus(0, 10);


		this.changeButtonStatus = this.changeButtonStatus.bind(this);
		this.setButtonDisabled = this.setButtonDisabled.bind(this);
		this.setButtonActive = this.setButtonActive.bind(this);


